services:
  # postgresql 
  portfolio_db:
    container_name: ${DATABASE_HOST}
    hostname:  ${DATABASE_HOST}
    image: postgres:16-alpine
    networks:
      - backend
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: on-failure

  portfolio_api:
    container_name: portfolio_api
    image: portfolio_api
    networks:
      - backend
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    build:
      dockerfile: Dockerfile
    entrypoint: entrypoint.sh
    command: [ "start:prod" ]
    environment:
      - MIGRATION_URL=${MIGRATION_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_ADAPTER=${DATABASE_ADAPTER}
      - DB_PORT=${DB_PORT}
      - API_SERVER_PORT=${API_SERVER_PORT}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - FRONTEND_SERVICE=${FRONTEND_SERVICE}
      - SSO_CALLBACK_URL=${SSO_CALLBACK_URL}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_SECRET_KEY=${GOOGLE_SECRET_KEY}
      - GOOGLE_SSO_USER_INFO_URL=${GOOGLE_SSO_USER_INFO_URL}
      - GOOGLE_SSO_CALLBACK_URL=${GOOGLE_SSO_CALLBACK_URL}
    depends_on:
      - portfolio_db
    restart: on-failure

volumes:
  dbgate-data:
    driver: local

networks:
  backend:
    driver: bridge
